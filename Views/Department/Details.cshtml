@model Department
@{
    Layout = "_Layout";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
    <link href="~/css/site.css" rel="stylesheet" />
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        th {
            font-size: 30px;
        }

        body {
            background-color: #212529;
        }
    </style>
</head>
<body>
    <table class="table table-hover table-bordered">
        <theader>
            <tr>
                <th style="color:red">ID</th>
                <th style="color:red">NAME</th>
            </tr>
        </theader>

        <tr>
            <th style="color:white">@Model.Id</th>
            <th style="color:white">@Model.Name</th>
        </tr>


    </table>

    <hr style="height:5px;border-width:0;color:gray;background-color:gray">

    @if (Model.students.Count==0)
    {
        <div class="h-100 d-flex align-items-center justify-content-center relative-container">
            <img  src="https://media.tenor.com/cXlrPENTVkEAAAAi/chika-dance.gif" alt="Empty Department">
            <h3 class="centered-text" style=" text-shadow: -2px -2px 0 red, 2px -2px 0 red, -2px 2px 0 red, 2px 2px 0 red; color: white; position: absolute; bottom: 150px; left: 50%; transform: translateX(-50%);">No Students at this Department</h3>
        </div>
        <br />
  
    }
    else
    {
        <table id="myTable2" class="table table-striped table-dark table-hover table-bordered ">
            <thead >
                <tr>
                    <th style="font-size:20px" scope="col">ID</th>
                    <th style="font-size:20px" scope="col">
                        <button onclick="sortTable(0)" class="btn btn-dark sortable-button">Name</button>
                    </th>
                    <th style="font-size:20px" scope="col">AGE</th>
                    <th style="font-size:20px" scope="col">Email</th>
                    <th style="font-size:20px" scope="col">Operation</th>
                </tr>
            </thead>

            @foreach (var item in Model.students)
            {
                <tr>
                    <th style="font-size:20px">@item.Id</th>
                    <td style="font-size:20px">@item.Name</td>
                    <td style="font-size:20px">@item.Age</td>
                    <td style="font-size:20px">@item.Email</td>

                    <td>
                        <a asp-action="details" asp-controller="student" asp-route-id="@item.Id" class="btn btn-info"> Details </a>
                        <a asp-action="delete" asp-controller="student" asp-route-id="@item.Id" onclick="return confirm('Are You Sure?')" class="btn btn-danger"> Delete </a>
                        <a asp-action="update" asp-controller="student" asp-route-id="@item.Id" class="btn btn-primary"> Update </a>
                    </td>
                </tr>

            }

        </table>
    }
    <a href="/department/index" style="font-size:40px; margin-left:45%" class="btn alert-danger"> Back </a>
    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("myTable2");
            switching = true;
            // Set the sorting direction to ascending:
            dir = "asc";
            /* Make a loop that will continue until
            no switching has been done: */
            while (switching) {
                // Start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /* Loop through all table rows (except the
                first, which contains table headers): */
                for (i = 1; i < (rows.length - 1); i++) {
                    // Start by saying there should be no switching:
                    shouldSwitch = false;
                    /* Get the two elements you want to compare,
                    one from current row and one from the next: */
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    /* Check if the two rows should switch place,
                    based on the direction, asc or desc: */
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            // If so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark that a switch has been done: */
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    // Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /* If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again. */
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
    </script>
</body>
</html>
